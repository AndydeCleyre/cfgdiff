#!/usr/bin/env python

from __future__ import print_function

import sys
import io
import optparse

try:
    from io import StringIO
except ImportError:
    from cStringIO import StringIO
import difflib

try:
    import configparser
except ImportError:
    import ConfigParser as configparser

import json


usage = "usage: %prog [options] fromfile tofile"
parser = optparse.OptionParser(usage)
parser.add_option("-c", action="store_true", default=False,
                  help='Produce a context format diff (default)')
parser.add_option("-u", action="store_true", default=False,
                  help='Produce a unified format diff')
hlp = 'Produce HTML side by side diff (can use -c and -l in conjunction)'
parser.add_option("-m", action="store_true", default=False, help=hlp)
parser.add_option("-n", action="store_true", default=False,
                  help='Produce a ndiff format diff')
parser.add_option("-l", "--lines", type="int", default=3,
                  help='Set number of context lines (default 3)')
(options, args) = parser.parse_args()

if len(args) == 0:
    parser.print_help()
    sys.exit(1)
if len(args) != 2:
    parser.error("need to specify both a fromfile and tofile")

n = options.lines
fromfile, tofile = args

class DiffBase(object):

    def __init__(self, filename):
        self.filename = filename
        self.pretty = StringIO()
        self.parse()

    def parse(self):
        pass

    def readlines(self):
        self.pretty.seek(0)
        return self.pretty.readlines()

class INIDiff(DiffBase):

    def parse(self):
        self.config = configparser.RawConfigParser(allow_no_value=True, dict_type=dict)
        self.config.read(self.filename)
        self.config.write(self.pretty)

class JSONDiff(DiffBase):

    def parse(self):
        with open(self.filename) as f:
            self.config = json.load(f)
            json.dump(self.config, self.pretty, sort_keys=True, indent=4, separators=(',', ': '))


fromini = INIDiff(fromfile)
toini = INIDiff(tofile)

fromlines = fromini.readlines()
tolines = toini.readlines()

if options.u:
    diff = difflib.unified_diff(fromlines, tolines, fromfile, tofile, n=n)
elif options.n:
    diff = difflib.ndiff(fromlines, tolines)
elif options.m:
    diff = difflib.HtmlDiff().make_file(fromlines, tolines, fromfile,
                                        tofile, context=options.c,
                                        numlines=n)
else:
    diff = difflib.context_diff(fromlines, tolines, fromfile, tofile, n=n)

sys.stdout.writelines(diff)
